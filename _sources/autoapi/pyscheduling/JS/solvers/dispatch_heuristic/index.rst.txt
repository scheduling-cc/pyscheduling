:py:mod:`pyscheduling.JS.solvers.dispatch_heuristic`
====================================================

.. py:module:: pyscheduling.JS.solvers.dispatch_heuristic


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pyscheduling.JS.solvers.dispatch_heuristic.DispatchHeuristic




.. py:class:: DispatchHeuristic

   Bases: :py:obj:`pyscheduling.core.base_solvers.BaseSolver`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:attribute:: rule
      :annotation: :Callable

      

   .. py:attribute:: reverse
      :annotation: :bool = False

      

   .. py:method:: solve(instance: pyscheduling.JS.JobShop.JobShopInstance)

      the ordered greedy constructive heuristic to find an initial solution of RmSijkCmax problem minimalizing the factor of (processing time + setup time) of
      jobs in the given order on different machines

      :param instance: Instance to be solved by the heuristic
      :type instance: JobShopInstance
      :param remaining_jobs: specific job sequence to consider by the heuristic
      :type remaining_jobs: list[int],optional
      :param is_random: shuffle the remaining_jobs_list if it's generated by the heuristic
      :type is_random: bool,optional

      :returns: the solver result of the execution of the heuristic
      :rtype: Problem.SolveResult



